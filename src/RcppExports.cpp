// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <RcppEigen.h>
#include <Rcpp.h>

using namespace Rcpp;

// dmvnrmArma
arma::vec dmvnrmArma(arma::mat x, arma::rowvec mean, arma::mat sigma, bool logd);
RcppExport SEXP _dmatch_dmvnrmArma(SEXP xSEXP, SEXP meanSEXP, SEXP sigmaSEXP, SEXP logdSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type x(xSEXP);
    Rcpp::traits::input_parameter< arma::rowvec >::type mean(meanSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type sigma(sigmaSEXP);
    Rcpp::traits::input_parameter< bool >::type logd(logdSEXP);
    rcpp_result_gen = Rcpp::wrap(dmvnrmArma(x, mean, sigma, logd));
    return rcpp_result_gen;
END_RCPP
}
// likelihood_para_cpp
double likelihood_para_cpp(arma::mat X, arma::mat Y, arma::rowvec mu_x, arma::rowvec mu_y, arma::mat A, arma::rowvec d, arma::mat D1, arma::mat D2, bool logd);
RcppExport SEXP _dmatch_likelihood_para_cpp(SEXP XSEXP, SEXP YSEXP, SEXP mu_xSEXP, SEXP mu_ySEXP, SEXP ASEXP, SEXP dSEXP, SEXP D1SEXP, SEXP D2SEXP, SEXP logdSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type X(XSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Y(YSEXP);
    Rcpp::traits::input_parameter< arma::rowvec >::type mu_x(mu_xSEXP);
    Rcpp::traits::input_parameter< arma::rowvec >::type mu_y(mu_ySEXP);
    Rcpp::traits::input_parameter< arma::mat >::type A(ASEXP);
    Rcpp::traits::input_parameter< arma::rowvec >::type d(dSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type D1(D1SEXP);
    Rcpp::traits::input_parameter< arma::mat >::type D2(D2SEXP);
    Rcpp::traits::input_parameter< bool >::type logd(logdSEXP);
    rcpp_result_gen = Rcpp::wrap(likelihood_para_cpp(X, Y, mu_x, mu_y, A, d, D1, D2, logd));
    return rcpp_result_gen;
END_RCPP
}
// dmvtArma
arma::vec dmvtArma(arma::mat X, arma::vec mu, arma::mat sigma, double df, bool log);
RcppExport SEXP _dmatch_dmvtArma(SEXP XSEXP, SEXP muSEXP, SEXP sigmaSEXP, SEXP dfSEXP, SEXP logSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type X(XSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type mu(muSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type sigma(sigmaSEXP);
    Rcpp::traits::input_parameter< double >::type df(dfSEXP);
    Rcpp::traits::input_parameter< bool >::type log(logSEXP);
    rcpp_result_gen = Rcpp::wrap(dmvtArma(X, mu, sigma, df, log));
    return rcpp_result_gen;
END_RCPP
}
// callmtCov
arma::mat callmtCov(arma::mat X, int nu);
RcppExport SEXP _dmatch_callmtCov(SEXP XSEXP, SEXP nuSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type X(XSEXP);
    Rcpp::traits::input_parameter< int >::type nu(nuSEXP);
    rcpp_result_gen = Rcpp::wrap(callmtCov(X, nu));
    return rcpp_result_gen;
END_RCPP
}
// likelihood_para_t_cpp
double likelihood_para_t_cpp(arma::mat X, arma::mat Y, arma::rowvec mu_x, arma::rowvec mu_y, arma::mat A, arma::rowvec d, arma::mat Sigma1, arma::mat Sigma2, double df, bool logd);
RcppExport SEXP _dmatch_likelihood_para_t_cpp(SEXP XSEXP, SEXP YSEXP, SEXP mu_xSEXP, SEXP mu_ySEXP, SEXP ASEXP, SEXP dSEXP, SEXP Sigma1SEXP, SEXP Sigma2SEXP, SEXP dfSEXP, SEXP logdSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type X(XSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Y(YSEXP);
    Rcpp::traits::input_parameter< arma::rowvec >::type mu_x(mu_xSEXP);
    Rcpp::traits::input_parameter< arma::rowvec >::type mu_y(mu_ySEXP);
    Rcpp::traits::input_parameter< arma::mat >::type A(ASEXP);
    Rcpp::traits::input_parameter< arma::rowvec >::type d(dSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Sigma1(Sigma1SEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Sigma2(Sigma2SEXP);
    Rcpp::traits::input_parameter< double >::type df(dfSEXP);
    Rcpp::traits::input_parameter< bool >::type logd(logdSEXP);
    rcpp_result_gen = Rcpp::wrap(likelihood_para_t_cpp(X, Y, mu_x, mu_y, A, d, Sigma1, Sigma2, df, logd));
    return rcpp_result_gen;
END_RCPP
}
// rotation_matrix
arma::mat rotation_matrix(double theta);
RcppExport SEXP _dmatch_rotation_matrix(SEXP thetaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type theta(thetaSEXP);
    rcpp_result_gen = Rcpp::wrap(rotation_matrix(theta));
    return rcpp_result_gen;
END_RCPP
}
// rotation_matrix_dev
arma::mat rotation_matrix_dev(double theta);
RcppExport SEXP _dmatch_rotation_matrix_dev(SEXP thetaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type theta(thetaSEXP);
    rcpp_result_gen = Rcpp::wrap(rotation_matrix_dev(theta));
    return rcpp_result_gen;
END_RCPP
}
// run_simple_est_cpp
Rcpp::List run_simple_est_cpp(arma::mat X, arma::mat Y, arma::mat x1, arma::mat y1, int steps);
RcppExport SEXP _dmatch_run_simple_est_cpp(SEXP XSEXP, SEXP YSEXP, SEXP x1SEXP, SEXP y1SEXP, SEXP stepsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type X(XSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Y(YSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type x1(x1SEXP);
    Rcpp::traits::input_parameter< arma::mat >::type y1(y1SEXP);
    Rcpp::traits::input_parameter< int >::type steps(stepsSEXP);
    rcpp_result_gen = Rcpp::wrap(run_simple_est_cpp(X, Y, x1, y1, steps));
    return rcpp_result_gen;
END_RCPP
}
// run_simple_est_theta_cpp
Rcpp::List run_simple_est_theta_cpp(arma::mat X, arma::mat Y, arma::mat x1, arma::mat y1, int steps);
RcppExport SEXP _dmatch_run_simple_est_theta_cpp(SEXP XSEXP, SEXP YSEXP, SEXP x1SEXP, SEXP y1SEXP, SEXP stepsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type X(XSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Y(YSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type x1(x1SEXP);
    Rcpp::traits::input_parameter< arma::mat >::type y1(y1SEXP);
    Rcpp::traits::input_parameter< int >::type steps(stepsSEXP);
    rcpp_result_gen = Rcpp::wrap(run_simple_est_theta_cpp(X, Y, x1, y1, steps));
    return rcpp_result_gen;
END_RCPP
}
// run_simple_est_theta_one_cluster_cpp
Rcpp::List run_simple_est_theta_one_cluster_cpp(arma::mat X, arma::mat x1, int steps);
RcppExport SEXP _dmatch_run_simple_est_theta_one_cluster_cpp(SEXP XSEXP, SEXP x1SEXP, SEXP stepsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type X(XSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type x1(x1SEXP);
    Rcpp::traits::input_parameter< int >::type steps(stepsSEXP);
    rcpp_result_gen = Rcpp::wrap(run_simple_est_theta_one_cluster_cpp(X, x1, steps));
    return rcpp_result_gen;
END_RCPP
}
// run_simple_est_theta_coord_cpp
Rcpp::List run_simple_est_theta_coord_cpp(arma::mat X, arma::mat Y, arma::mat x1, arma::mat y1, int steps);
RcppExport SEXP _dmatch_run_simple_est_theta_coord_cpp(SEXP XSEXP, SEXP YSEXP, SEXP x1SEXP, SEXP y1SEXP, SEXP stepsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type X(XSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Y(YSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type x1(x1SEXP);
    Rcpp::traits::input_parameter< arma::mat >::type y1(y1SEXP);
    Rcpp::traits::input_parameter< int >::type steps(stepsSEXP);
    rcpp_result_gen = Rcpp::wrap(run_simple_est_theta_coord_cpp(X, Y, x1, y1, steps));
    return rcpp_result_gen;
END_RCPP
}
// run_simple_est_theta_three_cluster_cpp
Rcpp::List run_simple_est_theta_three_cluster_cpp(arma::mat X, arma::mat Y, arma::mat Z, arma::mat x1, arma::mat y1, arma::mat z1, int steps);
RcppExport SEXP _dmatch_run_simple_est_theta_three_cluster_cpp(SEXP XSEXP, SEXP YSEXP, SEXP ZSEXP, SEXP x1SEXP, SEXP y1SEXP, SEXP z1SEXP, SEXP stepsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type X(XSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Y(YSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Z(ZSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type x1(x1SEXP);
    Rcpp::traits::input_parameter< arma::mat >::type y1(y1SEXP);
    Rcpp::traits::input_parameter< arma::mat >::type z1(z1SEXP);
    Rcpp::traits::input_parameter< int >::type steps(stepsSEXP);
    rcpp_result_gen = Rcpp::wrap(run_simple_est_theta_three_cluster_cpp(X, Y, Z, x1, y1, z1, steps));
    return rcpp_result_gen;
END_RCPP
}
// run_simple_est_coord_cpp
Rcpp::List run_simple_est_coord_cpp(arma::mat X, arma::mat Y, arma::mat x1, arma::mat y1, int steps);
RcppExport SEXP _dmatch_run_simple_est_coord_cpp(SEXP XSEXP, SEXP YSEXP, SEXP x1SEXP, SEXP y1SEXP, SEXP stepsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type X(XSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Y(YSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type x1(x1SEXP);
    Rcpp::traits::input_parameter< arma::mat >::type y1(y1SEXP);
    Rcpp::traits::input_parameter< int >::type steps(stepsSEXP);
    rcpp_result_gen = Rcpp::wrap(run_simple_est_coord_cpp(X, Y, x1, y1, steps));
    return rcpp_result_gen;
END_RCPP
}
// run_simple_est_coord_three_clusters_cpp
Rcpp::List run_simple_est_coord_three_clusters_cpp(arma::mat X, arma::mat Y, arma::mat Z, arma::mat x1, arma::mat y1, arma::mat z1, int steps);
RcppExport SEXP _dmatch_run_simple_est_coord_three_clusters_cpp(SEXP XSEXP, SEXP YSEXP, SEXP ZSEXP, SEXP x1SEXP, SEXP y1SEXP, SEXP z1SEXP, SEXP stepsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type X(XSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Y(YSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Z(ZSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type x1(x1SEXP);
    Rcpp::traits::input_parameter< arma::mat >::type y1(y1SEXP);
    Rcpp::traits::input_parameter< arma::mat >::type z1(z1SEXP);
    Rcpp::traits::input_parameter< int >::type steps(stepsSEXP);
    rcpp_result_gen = Rcpp::wrap(run_simple_est_coord_three_clusters_cpp(X, Y, Z, x1, y1, z1, steps));
    return rcpp_result_gen;
END_RCPP
}
// run_simple_t_distribution_est_cpp
Rcpp::List run_simple_t_distribution_est_cpp(arma::mat X, arma::mat Y, arma::mat x1, arma::mat y1, int steps, double nu);
RcppExport SEXP _dmatch_run_simple_t_distribution_est_cpp(SEXP XSEXP, SEXP YSEXP, SEXP x1SEXP, SEXP y1SEXP, SEXP stepsSEXP, SEXP nuSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type X(XSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Y(YSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type x1(x1SEXP);
    Rcpp::traits::input_parameter< arma::mat >::type y1(y1SEXP);
    Rcpp::traits::input_parameter< int >::type steps(stepsSEXP);
    Rcpp::traits::input_parameter< double >::type nu(nuSEXP);
    rcpp_result_gen = Rcpp::wrap(run_simple_t_distribution_est_cpp(X, Y, x1, y1, steps, nu));
    return rcpp_result_gen;
END_RCPP
}
// run_simple_t_distribution_est_theta_cpp
Rcpp::List run_simple_t_distribution_est_theta_cpp(arma::mat X, arma::mat Y, arma::mat x1, arma::mat y1, int steps, double nu);
RcppExport SEXP _dmatch_run_simple_t_distribution_est_theta_cpp(SEXP XSEXP, SEXP YSEXP, SEXP x1SEXP, SEXP y1SEXP, SEXP stepsSEXP, SEXP nuSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type X(XSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Y(YSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type x1(x1SEXP);
    Rcpp::traits::input_parameter< arma::mat >::type y1(y1SEXP);
    Rcpp::traits::input_parameter< int >::type steps(stepsSEXP);
    Rcpp::traits::input_parameter< double >::type nu(nuSEXP);
    rcpp_result_gen = Rcpp::wrap(run_simple_t_distribution_est_theta_cpp(X, Y, x1, y1, steps, nu));
    return rcpp_result_gen;
END_RCPP
}
// run_simple_angle_t_distribution_est_cpp
Rcpp::List run_simple_angle_t_distribution_est_cpp(arma::mat X, arma::mat Y, arma::mat x1, arma::mat y1, arma::vec angle_list, int steps, double nu);
RcppExport SEXP _dmatch_run_simple_angle_t_distribution_est_cpp(SEXP XSEXP, SEXP YSEXP, SEXP x1SEXP, SEXP y1SEXP, SEXP angle_listSEXP, SEXP stepsSEXP, SEXP nuSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type X(XSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Y(YSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type x1(x1SEXP);
    Rcpp::traits::input_parameter< arma::mat >::type y1(y1SEXP);
    Rcpp::traits::input_parameter< arma::vec >::type angle_list(angle_listSEXP);
    Rcpp::traits::input_parameter< int >::type steps(stepsSEXP);
    Rcpp::traits::input_parameter< double >::type nu(nuSEXP);
    rcpp_result_gen = Rcpp::wrap(run_simple_angle_t_distribution_est_cpp(X, Y, x1, y1, angle_list, steps, nu));
    return rcpp_result_gen;
END_RCPP
}
// run_simple_angle_t_distribution_likelihood_est_cpp
Rcpp::List run_simple_angle_t_distribution_likelihood_est_cpp(arma::mat X, arma::mat Y, arma::mat x1, arma::mat y1, arma::vec angle_list, int steps, double nu);
RcppExport SEXP _dmatch_run_simple_angle_t_distribution_likelihood_est_cpp(SEXP XSEXP, SEXP YSEXP, SEXP x1SEXP, SEXP y1SEXP, SEXP angle_listSEXP, SEXP stepsSEXP, SEXP nuSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type X(XSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Y(YSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type x1(x1SEXP);
    Rcpp::traits::input_parameter< arma::mat >::type y1(y1SEXP);
    Rcpp::traits::input_parameter< arma::vec >::type angle_list(angle_listSEXP);
    Rcpp::traits::input_parameter< int >::type steps(stepsSEXP);
    Rcpp::traits::input_parameter< double >::type nu(nuSEXP);
    rcpp_result_gen = Rcpp::wrap(run_simple_angle_t_distribution_likelihood_est_cpp(X, Y, x1, y1, angle_list, steps, nu));
    return rcpp_result_gen;
END_RCPP
}
// gradient_A
arma::mat gradient_A(arma::mat XX, arma::mat YY, arma::mat X_t, arma::mat Y_t, arma::rowvec mu_x, arma::rowvec mu_y, arma::mat estA, arma::rowvec estd, uint32_t n, uint32_t m, uint32_t p, arma::mat D1_inv, arma::mat D2_inv);
RcppExport SEXP _dmatch_gradient_A(SEXP XXSEXP, SEXP YYSEXP, SEXP X_tSEXP, SEXP Y_tSEXP, SEXP mu_xSEXP, SEXP mu_ySEXP, SEXP estASEXP, SEXP estdSEXP, SEXP nSEXP, SEXP mSEXP, SEXP pSEXP, SEXP D1_invSEXP, SEXP D2_invSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type XX(XXSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type YY(YYSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type X_t(X_tSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Y_t(Y_tSEXP);
    Rcpp::traits::input_parameter< arma::rowvec >::type mu_x(mu_xSEXP);
    Rcpp::traits::input_parameter< arma::rowvec >::type mu_y(mu_ySEXP);
    Rcpp::traits::input_parameter< arma::mat >::type estA(estASEXP);
    Rcpp::traits::input_parameter< arma::rowvec >::type estd(estdSEXP);
    Rcpp::traits::input_parameter< uint32_t >::type n(nSEXP);
    Rcpp::traits::input_parameter< uint32_t >::type m(mSEXP);
    Rcpp::traits::input_parameter< uint32_t >::type p(pSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type D1_inv(D1_invSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type D2_inv(D2_invSEXP);
    rcpp_result_gen = Rcpp::wrap(gradient_A(XX, YY, X_t, Y_t, mu_x, mu_y, estA, estd, n, m, p, D1_inv, D2_inv));
    return rcpp_result_gen;
END_RCPP
}
// gradient_d
arma::rowvec gradient_d(arma::mat X, arma::mat Y, arma::rowvec mu_x, arma::rowvec mu_y, arma::mat estA, arma::rowvec estd, uint32_t n, uint32_t m, uint32_t p, arma::mat D1_inv, arma::mat D2_inv, arma::mat D12_inv_sum);
RcppExport SEXP _dmatch_gradient_d(SEXP XSEXP, SEXP YSEXP, SEXP mu_xSEXP, SEXP mu_ySEXP, SEXP estASEXP, SEXP estdSEXP, SEXP nSEXP, SEXP mSEXP, SEXP pSEXP, SEXP D1_invSEXP, SEXP D2_invSEXP, SEXP D12_inv_sumSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type X(XSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Y(YSEXP);
    Rcpp::traits::input_parameter< arma::rowvec >::type mu_x(mu_xSEXP);
    Rcpp::traits::input_parameter< arma::rowvec >::type mu_y(mu_ySEXP);
    Rcpp::traits::input_parameter< arma::mat >::type estA(estASEXP);
    Rcpp::traits::input_parameter< arma::rowvec >::type estd(estdSEXP);
    Rcpp::traits::input_parameter< uint32_t >::type n(nSEXP);
    Rcpp::traits::input_parameter< uint32_t >::type m(mSEXP);
    Rcpp::traits::input_parameter< uint32_t >::type p(pSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type D1_inv(D1_invSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type D2_inv(D2_invSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type D12_inv_sum(D12_inv_sumSEXP);
    rcpp_result_gen = Rcpp::wrap(gradient_d(X, Y, mu_x, mu_y, estA, estd, n, m, p, D1_inv, D2_inv, D12_inv_sum));
    return rcpp_result_gen;
END_RCPP
}
// select_stepsize_for_A
arma::mat select_stepsize_for_A(arma::mat X, arma::mat Y, arma::rowvec mu_x, arma::rowvec mu_y, arma::mat estA, arma::rowvec estd, double ll, arma::mat A_gradient, uint32_t p, arma::mat D1, arma::mat D2, double gamma, double down);
RcppExport SEXP _dmatch_select_stepsize_for_A(SEXP XSEXP, SEXP YSEXP, SEXP mu_xSEXP, SEXP mu_ySEXP, SEXP estASEXP, SEXP estdSEXP, SEXP llSEXP, SEXP A_gradientSEXP, SEXP pSEXP, SEXP D1SEXP, SEXP D2SEXP, SEXP gammaSEXP, SEXP downSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type X(XSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Y(YSEXP);
    Rcpp::traits::input_parameter< arma::rowvec >::type mu_x(mu_xSEXP);
    Rcpp::traits::input_parameter< arma::rowvec >::type mu_y(mu_ySEXP);
    Rcpp::traits::input_parameter< arma::mat >::type estA(estASEXP);
    Rcpp::traits::input_parameter< arma::rowvec >::type estd(estdSEXP);
    Rcpp::traits::input_parameter< double >::type ll(llSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type A_gradient(A_gradientSEXP);
    Rcpp::traits::input_parameter< uint32_t >::type p(pSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type D1(D1SEXP);
    Rcpp::traits::input_parameter< arma::mat >::type D2(D2SEXP);
    Rcpp::traits::input_parameter< double >::type gamma(gammaSEXP);
    Rcpp::traits::input_parameter< double >::type down(downSEXP);
    rcpp_result_gen = Rcpp::wrap(select_stepsize_for_A(X, Y, mu_x, mu_y, estA, estd, ll, A_gradient, p, D1, D2, gamma, down));
    return rcpp_result_gen;
END_RCPP
}
// select_stepsize_for_d
arma::rowvec select_stepsize_for_d(arma::mat X, arma::mat Y, arma::rowvec mu_x, arma::rowvec mu_y, arma::mat estA, arma::rowvec estd, double ll, arma::rowvec d_gradient, uint32_t p, arma::mat D1, arma::mat D2, double gamma, double down);
RcppExport SEXP _dmatch_select_stepsize_for_d(SEXP XSEXP, SEXP YSEXP, SEXP mu_xSEXP, SEXP mu_ySEXP, SEXP estASEXP, SEXP estdSEXP, SEXP llSEXP, SEXP d_gradientSEXP, SEXP pSEXP, SEXP D1SEXP, SEXP D2SEXP, SEXP gammaSEXP, SEXP downSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type X(XSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Y(YSEXP);
    Rcpp::traits::input_parameter< arma::rowvec >::type mu_x(mu_xSEXP);
    Rcpp::traits::input_parameter< arma::rowvec >::type mu_y(mu_ySEXP);
    Rcpp::traits::input_parameter< arma::mat >::type estA(estASEXP);
    Rcpp::traits::input_parameter< arma::rowvec >::type estd(estdSEXP);
    Rcpp::traits::input_parameter< double >::type ll(llSEXP);
    Rcpp::traits::input_parameter< arma::rowvec >::type d_gradient(d_gradientSEXP);
    Rcpp::traits::input_parameter< uint32_t >::type p(pSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type D1(D1SEXP);
    Rcpp::traits::input_parameter< arma::mat >::type D2(D2SEXP);
    Rcpp::traits::input_parameter< double >::type gamma(gammaSEXP);
    Rcpp::traits::input_parameter< double >::type down(downSEXP);
    rcpp_result_gen = Rcpp::wrap(select_stepsize_for_d(X, Y, mu_x, mu_y, estA, estd, ll, d_gradient, p, D1, D2, gamma, down));
    return rcpp_result_gen;
END_RCPP
}
// select_stepsize_for_A_alt
arma::mat select_stepsize_for_A_alt(arma::mat X, arma::mat Y, arma::rowvec mu_x, arma::rowvec mu_y, arma::mat estA, arma::rowvec estd, double ll, arma::mat A_gradient, uint32_t p, arma::mat D1, arma::mat D2, double beta);
RcppExport SEXP _dmatch_select_stepsize_for_A_alt(SEXP XSEXP, SEXP YSEXP, SEXP mu_xSEXP, SEXP mu_ySEXP, SEXP estASEXP, SEXP estdSEXP, SEXP llSEXP, SEXP A_gradientSEXP, SEXP pSEXP, SEXP D1SEXP, SEXP D2SEXP, SEXP betaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type X(XSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Y(YSEXP);
    Rcpp::traits::input_parameter< arma::rowvec >::type mu_x(mu_xSEXP);
    Rcpp::traits::input_parameter< arma::rowvec >::type mu_y(mu_ySEXP);
    Rcpp::traits::input_parameter< arma::mat >::type estA(estASEXP);
    Rcpp::traits::input_parameter< arma::rowvec >::type estd(estdSEXP);
    Rcpp::traits::input_parameter< double >::type ll(llSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type A_gradient(A_gradientSEXP);
    Rcpp::traits::input_parameter< uint32_t >::type p(pSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type D1(D1SEXP);
    Rcpp::traits::input_parameter< arma::mat >::type D2(D2SEXP);
    Rcpp::traits::input_parameter< double >::type beta(betaSEXP);
    rcpp_result_gen = Rcpp::wrap(select_stepsize_for_A_alt(X, Y, mu_x, mu_y, estA, estd, ll, A_gradient, p, D1, D2, beta));
    return rcpp_result_gen;
END_RCPP
}
// select_stepsize_for_d_alt
arma::rowvec select_stepsize_for_d_alt(arma::mat X, arma::mat Y, arma::rowvec mu_x, arma::rowvec mu_y, arma::mat estA, arma::rowvec estd, double ll, arma::rowvec d_gradient, uint32_t p, arma::mat D1, arma::mat D2, double beta);
RcppExport SEXP _dmatch_select_stepsize_for_d_alt(SEXP XSEXP, SEXP YSEXP, SEXP mu_xSEXP, SEXP mu_ySEXP, SEXP estASEXP, SEXP estdSEXP, SEXP llSEXP, SEXP d_gradientSEXP, SEXP pSEXP, SEXP D1SEXP, SEXP D2SEXP, SEXP betaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type X(XSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Y(YSEXP);
    Rcpp::traits::input_parameter< arma::rowvec >::type mu_x(mu_xSEXP);
    Rcpp::traits::input_parameter< arma::rowvec >::type mu_y(mu_ySEXP);
    Rcpp::traits::input_parameter< arma::mat >::type estA(estASEXP);
    Rcpp::traits::input_parameter< arma::rowvec >::type estd(estdSEXP);
    Rcpp::traits::input_parameter< double >::type ll(llSEXP);
    Rcpp::traits::input_parameter< arma::rowvec >::type d_gradient(d_gradientSEXP);
    Rcpp::traits::input_parameter< uint32_t >::type p(pSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type D1(D1SEXP);
    Rcpp::traits::input_parameter< arma::mat >::type D2(D2SEXP);
    Rcpp::traits::input_parameter< double >::type beta(betaSEXP);
    rcpp_result_gen = Rcpp::wrap(select_stepsize_for_d_alt(X, Y, mu_x, mu_y, estA, estd, ll, d_gradient, p, D1, D2, beta));
    return rcpp_result_gen;
END_RCPP
}
// run_est_with_gradient_descent_cpp
Rcpp::List run_est_with_gradient_descent_cpp(arma::mat X, arma::mat Y, arma::mat x1, arma::mat y1, int steps, double gamma, double down);
RcppExport SEXP _dmatch_run_est_with_gradient_descent_cpp(SEXP XSEXP, SEXP YSEXP, SEXP x1SEXP, SEXP y1SEXP, SEXP stepsSEXP, SEXP gammaSEXP, SEXP downSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type X(XSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Y(YSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type x1(x1SEXP);
    Rcpp::traits::input_parameter< arma::mat >::type y1(y1SEXP);
    Rcpp::traits::input_parameter< int >::type steps(stepsSEXP);
    Rcpp::traits::input_parameter< double >::type gamma(gammaSEXP);
    Rcpp::traits::input_parameter< double >::type down(downSEXP);
    rcpp_result_gen = Rcpp::wrap(run_est_with_gradient_descent_cpp(X, Y, x1, y1, steps, gamma, down));
    return rcpp_result_gen;
END_RCPP
}
// gradient_theta
double gradient_theta(arma::mat X, arma::mat Y, arma::rowvec mu_x, arma::rowvec mu_y, double estTheta, arma::mat estA, arma::rowvec estd, uint32_t n, uint32_t m, uint32_t p, arma::mat D1_inv, arma::mat D2_inv);
RcppExport SEXP _dmatch_gradient_theta(SEXP XSEXP, SEXP YSEXP, SEXP mu_xSEXP, SEXP mu_ySEXP, SEXP estThetaSEXP, SEXP estASEXP, SEXP estdSEXP, SEXP nSEXP, SEXP mSEXP, SEXP pSEXP, SEXP D1_invSEXP, SEXP D2_invSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type X(XSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Y(YSEXP);
    Rcpp::traits::input_parameter< arma::rowvec >::type mu_x(mu_xSEXP);
    Rcpp::traits::input_parameter< arma::rowvec >::type mu_y(mu_ySEXP);
    Rcpp::traits::input_parameter< double >::type estTheta(estThetaSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type estA(estASEXP);
    Rcpp::traits::input_parameter< arma::rowvec >::type estd(estdSEXP);
    Rcpp::traits::input_parameter< uint32_t >::type n(nSEXP);
    Rcpp::traits::input_parameter< uint32_t >::type m(mSEXP);
    Rcpp::traits::input_parameter< uint32_t >::type p(pSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type D1_inv(D1_invSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type D2_inv(D2_invSEXP);
    rcpp_result_gen = Rcpp::wrap(gradient_theta(X, Y, mu_x, mu_y, estTheta, estA, estd, n, m, p, D1_inv, D2_inv));
    return rcpp_result_gen;
END_RCPP
}
// select_stepsize_for_theta
double select_stepsize_for_theta(arma::mat X, arma::mat Y, arma::rowvec mu_x, arma::rowvec mu_y, double estTheta, arma::mat estA, arma::rowvec estd, double ll, double Theta_gradient, uint32_t p, arma::mat D1, arma::mat D2, double gamma, double down);
RcppExport SEXP _dmatch_select_stepsize_for_theta(SEXP XSEXP, SEXP YSEXP, SEXP mu_xSEXP, SEXP mu_ySEXP, SEXP estThetaSEXP, SEXP estASEXP, SEXP estdSEXP, SEXP llSEXP, SEXP Theta_gradientSEXP, SEXP pSEXP, SEXP D1SEXP, SEXP D2SEXP, SEXP gammaSEXP, SEXP downSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type X(XSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Y(YSEXP);
    Rcpp::traits::input_parameter< arma::rowvec >::type mu_x(mu_xSEXP);
    Rcpp::traits::input_parameter< arma::rowvec >::type mu_y(mu_ySEXP);
    Rcpp::traits::input_parameter< double >::type estTheta(estThetaSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type estA(estASEXP);
    Rcpp::traits::input_parameter< arma::rowvec >::type estd(estdSEXP);
    Rcpp::traits::input_parameter< double >::type ll(llSEXP);
    Rcpp::traits::input_parameter< double >::type Theta_gradient(Theta_gradientSEXP);
    Rcpp::traits::input_parameter< uint32_t >::type p(pSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type D1(D1SEXP);
    Rcpp::traits::input_parameter< arma::mat >::type D2(D2SEXP);
    Rcpp::traits::input_parameter< double >::type gamma(gammaSEXP);
    Rcpp::traits::input_parameter< double >::type down(downSEXP);
    rcpp_result_gen = Rcpp::wrap(select_stepsize_for_theta(X, Y, mu_x, mu_y, estTheta, estA, estd, ll, Theta_gradient, p, D1, D2, gamma, down));
    return rcpp_result_gen;
END_RCPP
}
// run_est_with_gradient_descent_angle_search_cpp
Rcpp::List run_est_with_gradient_descent_angle_search_cpp(arma::mat X, arma::mat Y, arma::mat x1, arma::mat y1, int steps, double gamma, double down);
RcppExport SEXP _dmatch_run_est_with_gradient_descent_angle_search_cpp(SEXP XSEXP, SEXP YSEXP, SEXP x1SEXP, SEXP y1SEXP, SEXP stepsSEXP, SEXP gammaSEXP, SEXP downSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type X(XSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Y(YSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type x1(x1SEXP);
    Rcpp::traits::input_parameter< arma::mat >::type y1(y1SEXP);
    Rcpp::traits::input_parameter< int >::type steps(stepsSEXP);
    Rcpp::traits::input_parameter< double >::type gamma(gammaSEXP);
    Rcpp::traits::input_parameter< double >::type down(downSEXP);
    rcpp_result_gen = Rcpp::wrap(run_est_with_gradient_descent_angle_search_cpp(X, Y, x1, y1, steps, gamma, down));
    return rcpp_result_gen;
END_RCPP
}
// gradient_A_t_dis
arma::mat gradient_A_t_dis(arma::mat X, arma::mat Y, arma::mat Sigma1_inv, arma::mat Sigma2_inv, arma::rowvec mu_x, arma::rowvec mu_y, arma::mat estA, arma::rowvec estd, uint32_t n, uint32_t m, uint32_t p);
RcppExport SEXP _dmatch_gradient_A_t_dis(SEXP XSEXP, SEXP YSEXP, SEXP Sigma1_invSEXP, SEXP Sigma2_invSEXP, SEXP mu_xSEXP, SEXP mu_ySEXP, SEXP estASEXP, SEXP estdSEXP, SEXP nSEXP, SEXP mSEXP, SEXP pSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type X(XSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Y(YSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Sigma1_inv(Sigma1_invSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Sigma2_inv(Sigma2_invSEXP);
    Rcpp::traits::input_parameter< arma::rowvec >::type mu_x(mu_xSEXP);
    Rcpp::traits::input_parameter< arma::rowvec >::type mu_y(mu_ySEXP);
    Rcpp::traits::input_parameter< arma::mat >::type estA(estASEXP);
    Rcpp::traits::input_parameter< arma::rowvec >::type estd(estdSEXP);
    Rcpp::traits::input_parameter< uint32_t >::type n(nSEXP);
    Rcpp::traits::input_parameter< uint32_t >::type m(mSEXP);
    Rcpp::traits::input_parameter< uint32_t >::type p(pSEXP);
    rcpp_result_gen = Rcpp::wrap(gradient_A_t_dis(X, Y, Sigma1_inv, Sigma2_inv, mu_x, mu_y, estA, estd, n, m, p));
    return rcpp_result_gen;
END_RCPP
}
// gradient_d_t_dis
arma::rowvec gradient_d_t_dis(arma::mat X, arma::mat Y, arma::mat Sigma1_inv, arma::mat Sigma2_inv, arma::rowvec mu_x, arma::rowvec mu_y, arma::mat estA, arma::rowvec estd, uint32_t n, uint32_t m, uint32_t p);
RcppExport SEXP _dmatch_gradient_d_t_dis(SEXP XSEXP, SEXP YSEXP, SEXP Sigma1_invSEXP, SEXP Sigma2_invSEXP, SEXP mu_xSEXP, SEXP mu_ySEXP, SEXP estASEXP, SEXP estdSEXP, SEXP nSEXP, SEXP mSEXP, SEXP pSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type X(XSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Y(YSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Sigma1_inv(Sigma1_invSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Sigma2_inv(Sigma2_invSEXP);
    Rcpp::traits::input_parameter< arma::rowvec >::type mu_x(mu_xSEXP);
    Rcpp::traits::input_parameter< arma::rowvec >::type mu_y(mu_ySEXP);
    Rcpp::traits::input_parameter< arma::mat >::type estA(estASEXP);
    Rcpp::traits::input_parameter< arma::rowvec >::type estd(estdSEXP);
    Rcpp::traits::input_parameter< uint32_t >::type n(nSEXP);
    Rcpp::traits::input_parameter< uint32_t >::type m(mSEXP);
    Rcpp::traits::input_parameter< uint32_t >::type p(pSEXP);
    rcpp_result_gen = Rcpp::wrap(gradient_d_t_dis(X, Y, Sigma1_inv, Sigma2_inv, mu_x, mu_y, estA, estd, n, m, p));
    return rcpp_result_gen;
END_RCPP
}
// select_stepsize_for_A_t_dis
arma::mat select_stepsize_for_A_t_dis(arma::mat X, arma::mat Y, arma::rowvec mu_x, arma::rowvec mu_y, arma::mat estA, arma::rowvec estd, double ll, arma::mat A_gradient, uint32_t p, arma::mat Sigma1, arma::mat Sigma2, double nu, double gamma, double down);
RcppExport SEXP _dmatch_select_stepsize_for_A_t_dis(SEXP XSEXP, SEXP YSEXP, SEXP mu_xSEXP, SEXP mu_ySEXP, SEXP estASEXP, SEXP estdSEXP, SEXP llSEXP, SEXP A_gradientSEXP, SEXP pSEXP, SEXP Sigma1SEXP, SEXP Sigma2SEXP, SEXP nuSEXP, SEXP gammaSEXP, SEXP downSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type X(XSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Y(YSEXP);
    Rcpp::traits::input_parameter< arma::rowvec >::type mu_x(mu_xSEXP);
    Rcpp::traits::input_parameter< arma::rowvec >::type mu_y(mu_ySEXP);
    Rcpp::traits::input_parameter< arma::mat >::type estA(estASEXP);
    Rcpp::traits::input_parameter< arma::rowvec >::type estd(estdSEXP);
    Rcpp::traits::input_parameter< double >::type ll(llSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type A_gradient(A_gradientSEXP);
    Rcpp::traits::input_parameter< uint32_t >::type p(pSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Sigma1(Sigma1SEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Sigma2(Sigma2SEXP);
    Rcpp::traits::input_parameter< double >::type nu(nuSEXP);
    Rcpp::traits::input_parameter< double >::type gamma(gammaSEXP);
    Rcpp::traits::input_parameter< double >::type down(downSEXP);
    rcpp_result_gen = Rcpp::wrap(select_stepsize_for_A_t_dis(X, Y, mu_x, mu_y, estA, estd, ll, A_gradient, p, Sigma1, Sigma2, nu, gamma, down));
    return rcpp_result_gen;
END_RCPP
}
// select_stepsize_for_d_t_dis
arma::rowvec select_stepsize_for_d_t_dis(arma::mat X, arma::mat Y, arma::rowvec mu_x, arma::rowvec mu_y, arma::mat estA, arma::rowvec estd, double ll, arma::rowvec d_gradient, uint32_t p, arma::mat Sigma1, arma::mat Sigma2, double nu, double gamma, double down);
RcppExport SEXP _dmatch_select_stepsize_for_d_t_dis(SEXP XSEXP, SEXP YSEXP, SEXP mu_xSEXP, SEXP mu_ySEXP, SEXP estASEXP, SEXP estdSEXP, SEXP llSEXP, SEXP d_gradientSEXP, SEXP pSEXP, SEXP Sigma1SEXP, SEXP Sigma2SEXP, SEXP nuSEXP, SEXP gammaSEXP, SEXP downSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type X(XSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Y(YSEXP);
    Rcpp::traits::input_parameter< arma::rowvec >::type mu_x(mu_xSEXP);
    Rcpp::traits::input_parameter< arma::rowvec >::type mu_y(mu_ySEXP);
    Rcpp::traits::input_parameter< arma::mat >::type estA(estASEXP);
    Rcpp::traits::input_parameter< arma::rowvec >::type estd(estdSEXP);
    Rcpp::traits::input_parameter< double >::type ll(llSEXP);
    Rcpp::traits::input_parameter< arma::rowvec >::type d_gradient(d_gradientSEXP);
    Rcpp::traits::input_parameter< uint32_t >::type p(pSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Sigma1(Sigma1SEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Sigma2(Sigma2SEXP);
    Rcpp::traits::input_parameter< double >::type nu(nuSEXP);
    Rcpp::traits::input_parameter< double >::type gamma(gammaSEXP);
    Rcpp::traits::input_parameter< double >::type down(downSEXP);
    rcpp_result_gen = Rcpp::wrap(select_stepsize_for_d_t_dis(X, Y, mu_x, mu_y, estA, estd, ll, d_gradient, p, Sigma1, Sigma2, nu, gamma, down));
    return rcpp_result_gen;
END_RCPP
}
// run_est_with_gradient_descent_t_dis_cpp
Rcpp::List run_est_with_gradient_descent_t_dis_cpp(arma::mat X, arma::mat Y, arma::mat x1, arma::mat y1, double gamma, double down, int steps, double nu);
RcppExport SEXP _dmatch_run_est_with_gradient_descent_t_dis_cpp(SEXP XSEXP, SEXP YSEXP, SEXP x1SEXP, SEXP y1SEXP, SEXP gammaSEXP, SEXP downSEXP, SEXP stepsSEXP, SEXP nuSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type X(XSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Y(YSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type x1(x1SEXP);
    Rcpp::traits::input_parameter< arma::mat >::type y1(y1SEXP);
    Rcpp::traits::input_parameter< double >::type gamma(gammaSEXP);
    Rcpp::traits::input_parameter< double >::type down(downSEXP);
    Rcpp::traits::input_parameter< int >::type steps(stepsSEXP);
    Rcpp::traits::input_parameter< double >::type nu(nuSEXP);
    rcpp_result_gen = Rcpp::wrap(run_est_with_gradient_descent_t_dis_cpp(X, Y, x1, y1, gamma, down, steps, nu));
    return rcpp_result_gen;
END_RCPP
}
// gradient_theta_t_dis
double gradient_theta_t_dis(arma::mat X, arma::mat Y, arma::mat Sigma1_inv, arma::mat Sigma2_inv, arma::rowvec mu_x, arma::rowvec mu_y, double estTheta, arma::mat estA, arma::rowvec estd, uint32_t n, uint32_t m, uint32_t p);
RcppExport SEXP _dmatch_gradient_theta_t_dis(SEXP XSEXP, SEXP YSEXP, SEXP Sigma1_invSEXP, SEXP Sigma2_invSEXP, SEXP mu_xSEXP, SEXP mu_ySEXP, SEXP estThetaSEXP, SEXP estASEXP, SEXP estdSEXP, SEXP nSEXP, SEXP mSEXP, SEXP pSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type X(XSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Y(YSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Sigma1_inv(Sigma1_invSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Sigma2_inv(Sigma2_invSEXP);
    Rcpp::traits::input_parameter< arma::rowvec >::type mu_x(mu_xSEXP);
    Rcpp::traits::input_parameter< arma::rowvec >::type mu_y(mu_ySEXP);
    Rcpp::traits::input_parameter< double >::type estTheta(estThetaSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type estA(estASEXP);
    Rcpp::traits::input_parameter< arma::rowvec >::type estd(estdSEXP);
    Rcpp::traits::input_parameter< uint32_t >::type n(nSEXP);
    Rcpp::traits::input_parameter< uint32_t >::type m(mSEXP);
    Rcpp::traits::input_parameter< uint32_t >::type p(pSEXP);
    rcpp_result_gen = Rcpp::wrap(gradient_theta_t_dis(X, Y, Sigma1_inv, Sigma2_inv, mu_x, mu_y, estTheta, estA, estd, n, m, p));
    return rcpp_result_gen;
END_RCPP
}
// select_stepsize_for_theta_t_dis
double select_stepsize_for_theta_t_dis(arma::mat X, arma::mat Y, arma::rowvec mu_x, arma::rowvec mu_y, double estTheta, arma::mat estA, arma::rowvec estd, double ll, double Theta_gradient, uint32_t p, arma::mat Sigma1, arma::mat Sigma2, double nu, double gamma, double down);
RcppExport SEXP _dmatch_select_stepsize_for_theta_t_dis(SEXP XSEXP, SEXP YSEXP, SEXP mu_xSEXP, SEXP mu_ySEXP, SEXP estThetaSEXP, SEXP estASEXP, SEXP estdSEXP, SEXP llSEXP, SEXP Theta_gradientSEXP, SEXP pSEXP, SEXP Sigma1SEXP, SEXP Sigma2SEXP, SEXP nuSEXP, SEXP gammaSEXP, SEXP downSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type X(XSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Y(YSEXP);
    Rcpp::traits::input_parameter< arma::rowvec >::type mu_x(mu_xSEXP);
    Rcpp::traits::input_parameter< arma::rowvec >::type mu_y(mu_ySEXP);
    Rcpp::traits::input_parameter< double >::type estTheta(estThetaSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type estA(estASEXP);
    Rcpp::traits::input_parameter< arma::rowvec >::type estd(estdSEXP);
    Rcpp::traits::input_parameter< double >::type ll(llSEXP);
    Rcpp::traits::input_parameter< double >::type Theta_gradient(Theta_gradientSEXP);
    Rcpp::traits::input_parameter< uint32_t >::type p(pSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Sigma1(Sigma1SEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Sigma2(Sigma2SEXP);
    Rcpp::traits::input_parameter< double >::type nu(nuSEXP);
    Rcpp::traits::input_parameter< double >::type gamma(gammaSEXP);
    Rcpp::traits::input_parameter< double >::type down(downSEXP);
    rcpp_result_gen = Rcpp::wrap(select_stepsize_for_theta_t_dis(X, Y, mu_x, mu_y, estTheta, estA, estd, ll, Theta_gradient, p, Sigma1, Sigma2, nu, gamma, down));
    return rcpp_result_gen;
END_RCPP
}
// run_est_with_gradient_descent_angle_search_t_dis_cpp
Rcpp::List run_est_with_gradient_descent_angle_search_t_dis_cpp(arma::mat X, arma::mat Y, arma::mat x1, arma::mat y1, double gamma, double down, int steps, double nu);
RcppExport SEXP _dmatch_run_est_with_gradient_descent_angle_search_t_dis_cpp(SEXP XSEXP, SEXP YSEXP, SEXP x1SEXP, SEXP y1SEXP, SEXP gammaSEXP, SEXP downSEXP, SEXP stepsSEXP, SEXP nuSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type X(XSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Y(YSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type x1(x1SEXP);
    Rcpp::traits::input_parameter< arma::mat >::type y1(y1SEXP);
    Rcpp::traits::input_parameter< double >::type gamma(gammaSEXP);
    Rcpp::traits::input_parameter< double >::type down(downSEXP);
    Rcpp::traits::input_parameter< int >::type steps(stepsSEXP);
    Rcpp::traits::input_parameter< double >::type nu(nuSEXP);
    rcpp_result_gen = Rcpp::wrap(run_est_with_gradient_descent_angle_search_t_dis_cpp(X, Y, x1, y1, gamma, down, steps, nu));
    return rcpp_result_gen;
END_RCPP
}
// run_simple_angle_est_cpp
Rcpp::List run_simple_angle_est_cpp(arma::mat X, arma::mat Y, arma::mat x1, arma::mat y1, arma::vec angle_list, int steps);
RcppExport SEXP _dmatch_run_simple_angle_est_cpp(SEXP XSEXP, SEXP YSEXP, SEXP x1SEXP, SEXP y1SEXP, SEXP angle_listSEXP, SEXP stepsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type X(XSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Y(YSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type x1(x1SEXP);
    Rcpp::traits::input_parameter< arma::mat >::type y1(y1SEXP);
    Rcpp::traits::input_parameter< arma::vec >::type angle_list(angle_listSEXP);
    Rcpp::traits::input_parameter< int >::type steps(stepsSEXP);
    rcpp_result_gen = Rcpp::wrap(run_simple_angle_est_cpp(X, Y, x1, y1, angle_list, steps));
    return rcpp_result_gen;
END_RCPP
}
// run_simple_angle_likelihood_est_cpp
Rcpp::List run_simple_angle_likelihood_est_cpp(arma::mat X, arma::mat Y, arma::mat x1, arma::mat y1, arma::vec angle_list, int steps);
RcppExport SEXP _dmatch_run_simple_angle_likelihood_est_cpp(SEXP XSEXP, SEXP YSEXP, SEXP x1SEXP, SEXP y1SEXP, SEXP angle_listSEXP, SEXP stepsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type X(XSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Y(YSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type x1(x1SEXP);
    Rcpp::traits::input_parameter< arma::mat >::type y1(y1SEXP);
    Rcpp::traits::input_parameter< arma::vec >::type angle_list(angle_listSEXP);
    Rcpp::traits::input_parameter< int >::type steps(stepsSEXP);
    rcpp_result_gen = Rcpp::wrap(run_simple_angle_likelihood_est_cpp(X, Y, x1, y1, angle_list, steps));
    return rcpp_result_gen;
END_RCPP
}
// run_simple_est_theta_coordinate_descent_cpp
Rcpp::List run_simple_est_theta_coordinate_descent_cpp(arma::mat X, arma::mat Y, arma::mat x1, arma::mat y1, int steps, int gra_steps);
RcppExport SEXP _dmatch_run_simple_est_theta_coordinate_descent_cpp(SEXP XSEXP, SEXP YSEXP, SEXP x1SEXP, SEXP y1SEXP, SEXP stepsSEXP, SEXP gra_stepsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type X(XSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Y(YSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type x1(x1SEXP);
    Rcpp::traits::input_parameter< arma::mat >::type y1(y1SEXP);
    Rcpp::traits::input_parameter< int >::type steps(stepsSEXP);
    Rcpp::traits::input_parameter< int >::type gra_steps(gra_stepsSEXP);
    rcpp_result_gen = Rcpp::wrap(run_simple_est_theta_coordinate_descent_cpp(X, Y, x1, y1, steps, gra_steps));
    return rcpp_result_gen;
END_RCPP
}
// run_simple_est_theta_coordinate_descent_one_cluster_cpp
Rcpp::List run_simple_est_theta_coordinate_descent_one_cluster_cpp(arma::mat X, arma::mat x1, int steps, int gra_steps);
RcppExport SEXP _dmatch_run_simple_est_theta_coordinate_descent_one_cluster_cpp(SEXP XSEXP, SEXP x1SEXP, SEXP stepsSEXP, SEXP gra_stepsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type X(XSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type x1(x1SEXP);
    Rcpp::traits::input_parameter< int >::type steps(stepsSEXP);
    Rcpp::traits::input_parameter< int >::type gra_steps(gra_stepsSEXP);
    rcpp_result_gen = Rcpp::wrap(run_simple_est_theta_coordinate_descent_one_cluster_cpp(X, x1, steps, gra_steps));
    return rcpp_result_gen;
END_RCPP
}
// run_simple_est_theta_coordinate_descent_three_cluster_cpp
Rcpp::List run_simple_est_theta_coordinate_descent_three_cluster_cpp(arma::mat X, arma::mat Y, arma::mat Z, arma::mat x1, arma::mat y1, arma::mat z1, int steps, int gra_steps);
RcppExport SEXP _dmatch_run_simple_est_theta_coordinate_descent_three_cluster_cpp(SEXP XSEXP, SEXP YSEXP, SEXP ZSEXP, SEXP x1SEXP, SEXP y1SEXP, SEXP z1SEXP, SEXP stepsSEXP, SEXP gra_stepsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type X(XSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Y(YSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Z(ZSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type x1(x1SEXP);
    Rcpp::traits::input_parameter< arma::mat >::type y1(y1SEXP);
    Rcpp::traits::input_parameter< arma::mat >::type z1(z1SEXP);
    Rcpp::traits::input_parameter< int >::type steps(stepsSEXP);
    Rcpp::traits::input_parameter< int >::type gra_steps(gra_stepsSEXP);
    rcpp_result_gen = Rcpp::wrap(run_simple_est_theta_coordinate_descent_three_cluster_cpp(X, Y, Z, x1, y1, z1, steps, gra_steps));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_dmatch_dmvnrmArma", (DL_FUNC) &_dmatch_dmvnrmArma, 4},
    {"_dmatch_likelihood_para_cpp", (DL_FUNC) &_dmatch_likelihood_para_cpp, 9},
    {"_dmatch_dmvtArma", (DL_FUNC) &_dmatch_dmvtArma, 5},
    {"_dmatch_callmtCov", (DL_FUNC) &_dmatch_callmtCov, 2},
    {"_dmatch_likelihood_para_t_cpp", (DL_FUNC) &_dmatch_likelihood_para_t_cpp, 10},
    {"_dmatch_rotation_matrix", (DL_FUNC) &_dmatch_rotation_matrix, 1},
    {"_dmatch_rotation_matrix_dev", (DL_FUNC) &_dmatch_rotation_matrix_dev, 1},
    {"_dmatch_run_simple_est_cpp", (DL_FUNC) &_dmatch_run_simple_est_cpp, 5},
    {"_dmatch_run_simple_est_theta_cpp", (DL_FUNC) &_dmatch_run_simple_est_theta_cpp, 5},
    {"_dmatch_run_simple_est_theta_one_cluster_cpp", (DL_FUNC) &_dmatch_run_simple_est_theta_one_cluster_cpp, 3},
    {"_dmatch_run_simple_est_theta_coord_cpp", (DL_FUNC) &_dmatch_run_simple_est_theta_coord_cpp, 5},
    {"_dmatch_run_simple_est_theta_three_cluster_cpp", (DL_FUNC) &_dmatch_run_simple_est_theta_three_cluster_cpp, 7},
    {"_dmatch_run_simple_est_coord_cpp", (DL_FUNC) &_dmatch_run_simple_est_coord_cpp, 5},
    {"_dmatch_run_simple_est_coord_three_clusters_cpp", (DL_FUNC) &_dmatch_run_simple_est_coord_three_clusters_cpp, 7},
    {"_dmatch_run_simple_t_distribution_est_cpp", (DL_FUNC) &_dmatch_run_simple_t_distribution_est_cpp, 6},
    {"_dmatch_run_simple_t_distribution_est_theta_cpp", (DL_FUNC) &_dmatch_run_simple_t_distribution_est_theta_cpp, 6},
    {"_dmatch_run_simple_angle_t_distribution_est_cpp", (DL_FUNC) &_dmatch_run_simple_angle_t_distribution_est_cpp, 7},
    {"_dmatch_run_simple_angle_t_distribution_likelihood_est_cpp", (DL_FUNC) &_dmatch_run_simple_angle_t_distribution_likelihood_est_cpp, 7},
    {"_dmatch_gradient_A", (DL_FUNC) &_dmatch_gradient_A, 13},
    {"_dmatch_gradient_d", (DL_FUNC) &_dmatch_gradient_d, 12},
    {"_dmatch_select_stepsize_for_A", (DL_FUNC) &_dmatch_select_stepsize_for_A, 13},
    {"_dmatch_select_stepsize_for_d", (DL_FUNC) &_dmatch_select_stepsize_for_d, 13},
    {"_dmatch_select_stepsize_for_A_alt", (DL_FUNC) &_dmatch_select_stepsize_for_A_alt, 12},
    {"_dmatch_select_stepsize_for_d_alt", (DL_FUNC) &_dmatch_select_stepsize_for_d_alt, 12},
    {"_dmatch_run_est_with_gradient_descent_cpp", (DL_FUNC) &_dmatch_run_est_with_gradient_descent_cpp, 7},
    {"_dmatch_gradient_theta", (DL_FUNC) &_dmatch_gradient_theta, 12},
    {"_dmatch_select_stepsize_for_theta", (DL_FUNC) &_dmatch_select_stepsize_for_theta, 14},
    {"_dmatch_run_est_with_gradient_descent_angle_search_cpp", (DL_FUNC) &_dmatch_run_est_with_gradient_descent_angle_search_cpp, 7},
    {"_dmatch_gradient_A_t_dis", (DL_FUNC) &_dmatch_gradient_A_t_dis, 11},
    {"_dmatch_gradient_d_t_dis", (DL_FUNC) &_dmatch_gradient_d_t_dis, 11},
    {"_dmatch_select_stepsize_for_A_t_dis", (DL_FUNC) &_dmatch_select_stepsize_for_A_t_dis, 14},
    {"_dmatch_select_stepsize_for_d_t_dis", (DL_FUNC) &_dmatch_select_stepsize_for_d_t_dis, 14},
    {"_dmatch_run_est_with_gradient_descent_t_dis_cpp", (DL_FUNC) &_dmatch_run_est_with_gradient_descent_t_dis_cpp, 8},
    {"_dmatch_gradient_theta_t_dis", (DL_FUNC) &_dmatch_gradient_theta_t_dis, 12},
    {"_dmatch_select_stepsize_for_theta_t_dis", (DL_FUNC) &_dmatch_select_stepsize_for_theta_t_dis, 15},
    {"_dmatch_run_est_with_gradient_descent_angle_search_t_dis_cpp", (DL_FUNC) &_dmatch_run_est_with_gradient_descent_angle_search_t_dis_cpp, 8},
    {"_dmatch_run_simple_angle_est_cpp", (DL_FUNC) &_dmatch_run_simple_angle_est_cpp, 6},
    {"_dmatch_run_simple_angle_likelihood_est_cpp", (DL_FUNC) &_dmatch_run_simple_angle_likelihood_est_cpp, 6},
    {"_dmatch_run_simple_est_theta_coordinate_descent_cpp", (DL_FUNC) &_dmatch_run_simple_est_theta_coordinate_descent_cpp, 6},
    {"_dmatch_run_simple_est_theta_coordinate_descent_one_cluster_cpp", (DL_FUNC) &_dmatch_run_simple_est_theta_coordinate_descent_one_cluster_cpp, 4},
    {"_dmatch_run_simple_est_theta_coordinate_descent_three_cluster_cpp", (DL_FUNC) &_dmatch_run_simple_est_theta_coordinate_descent_three_cluster_cpp, 8},
    {NULL, NULL, 0}
};

RcppExport void R_init_dmatch(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
